// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cosmos/v1beta1/msgs_with_fees.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/codec/types"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgSendWithFees struct {
	MessageSend *MsgSend                                `protobuf:"bytes,1,opt,name=message_send,json=messageSend,proto3" json:"message_send,omitempty" yaml:"message_send"`
	Fees        github_com_cosmos_cosmos_sdk_types.Coin `protobuf:"bytes,2,opt,name=fees,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Coin" json:"fees"`
}

func (m *MsgSendWithFees) Reset()         { *m = MsgSendWithFees{} }
func (m *MsgSendWithFees) String() string { return proto.CompactTextString(m) }
func (*MsgSendWithFees) ProtoMessage()    {}
func (*MsgSendWithFees) Descriptor() ([]byte, []int) {
	return fileDescriptor_24d10861b4de12e1, []int{0}
}
func (m *MsgSendWithFees) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSendWithFees) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSendWithFees.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSendWithFees) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSendWithFees.Merge(m, src)
}
func (m *MsgSendWithFees) XXX_Size() int {
	return m.Size()
}
func (m *MsgSendWithFees) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSendWithFees.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSendWithFees proto.InternalMessageInfo

func (m *MsgSendWithFees) GetMessageSend() *MsgSend {
	if m != nil {
		return m.MessageSend
	}
	return nil
}

type MsgSendWithFeesResponse struct {
}

func (m *MsgSendWithFeesResponse) Reset()         { *m = MsgSendWithFeesResponse{} }
func (m *MsgSendWithFeesResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSendWithFeesResponse) ProtoMessage()    {}
func (*MsgSendWithFeesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_24d10861b4de12e1, []int{1}
}
func (m *MsgSendWithFeesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSendWithFeesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSendWithFeesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSendWithFeesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSendWithFeesResponse.Merge(m, src)
}
func (m *MsgSendWithFeesResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSendWithFeesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSendWithFeesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSendWithFeesResponse proto.InternalMessageInfo

type MsgVoteWithFees struct {
	MessageVote *MsgVote                                `protobuf:"bytes,1,opt,name=message_vote,json=messageVote,proto3" json:"message_vote,omitempty" yaml:"message_send"`
	Fees        github_com_cosmos_cosmos_sdk_types.Coin `protobuf:"bytes,2,opt,name=fees,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Coin" json:"fees"`
}

func (m *MsgVoteWithFees) Reset()         { *m = MsgVoteWithFees{} }
func (m *MsgVoteWithFees) String() string { return proto.CompactTextString(m) }
func (*MsgVoteWithFees) ProtoMessage()    {}
func (*MsgVoteWithFees) Descriptor() ([]byte, []int) {
	return fileDescriptor_24d10861b4de12e1, []int{2}
}
func (m *MsgVoteWithFees) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgVoteWithFees) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgVoteWithFees.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgVoteWithFees) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgVoteWithFees.Merge(m, src)
}
func (m *MsgVoteWithFees) XXX_Size() int {
	return m.Size()
}
func (m *MsgVoteWithFees) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgVoteWithFees.DiscardUnknown(m)
}

var xxx_messageInfo_MsgVoteWithFees proto.InternalMessageInfo

func (m *MsgVoteWithFees) GetMessageVote() *MsgVote {
	if m != nil {
		return m.MessageVote
	}
	return nil
}

type MsgVoteWithFeesResponse struct {
}

func (m *MsgVoteWithFeesResponse) Reset()         { *m = MsgVoteWithFeesResponse{} }
func (m *MsgVoteWithFeesResponse) String() string { return proto.CompactTextString(m) }
func (*MsgVoteWithFeesResponse) ProtoMessage()    {}
func (*MsgVoteWithFeesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_24d10861b4de12e1, []int{3}
}
func (m *MsgVoteWithFeesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgVoteWithFeesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgVoteWithFeesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgVoteWithFeesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgVoteWithFeesResponse.Merge(m, src)
}
func (m *MsgVoteWithFeesResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgVoteWithFeesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgVoteWithFeesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgVoteWithFeesResponse proto.InternalMessageInfo

type MsgDelegateWithFees struct {
	MessageDelegate *MsgDelegate                            `protobuf:"bytes,1,opt,name=message_delegate,json=messageDelegate,proto3" json:"message_delegate,omitempty" yaml:"msg_delegate"`
	Fees            github_com_cosmos_cosmos_sdk_types.Coin `protobuf:"bytes,2,opt,name=fees,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Coin" json:"fees"`
}

func (m *MsgDelegateWithFees) Reset()         { *m = MsgDelegateWithFees{} }
func (m *MsgDelegateWithFees) String() string { return proto.CompactTextString(m) }
func (*MsgDelegateWithFees) ProtoMessage()    {}
func (*MsgDelegateWithFees) Descriptor() ([]byte, []int) {
	return fileDescriptor_24d10861b4de12e1, []int{4}
}
func (m *MsgDelegateWithFees) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDelegateWithFees) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDelegateWithFees.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDelegateWithFees) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDelegateWithFees.Merge(m, src)
}
func (m *MsgDelegateWithFees) XXX_Size() int {
	return m.Size()
}
func (m *MsgDelegateWithFees) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDelegateWithFees.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDelegateWithFees proto.InternalMessageInfo

func (m *MsgDelegateWithFees) GetMessageDelegate() *MsgDelegate {
	if m != nil {
		return m.MessageDelegate
	}
	return nil
}

type MsgDelegateWithFeesResponse struct {
}

func (m *MsgDelegateWithFeesResponse) Reset()         { *m = MsgDelegateWithFeesResponse{} }
func (m *MsgDelegateWithFeesResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDelegateWithFeesResponse) ProtoMessage()    {}
func (*MsgDelegateWithFeesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_24d10861b4de12e1, []int{5}
}
func (m *MsgDelegateWithFeesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDelegateWithFeesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDelegateWithFeesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDelegateWithFeesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDelegateWithFeesResponse.Merge(m, src)
}
func (m *MsgDelegateWithFeesResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDelegateWithFeesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDelegateWithFeesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDelegateWithFeesResponse proto.InternalMessageInfo

type MsgUndelegateWithFees struct {
	MessageUndelegate *MsgUndelegate                          `protobuf:"bytes,1,opt,name=message_undelegate,json=messageUndelegate,proto3" json:"message_undelegate,omitempty" yaml:"msg_undelegate"`
	Fees              github_com_cosmos_cosmos_sdk_types.Coin `protobuf:"bytes,2,opt,name=fees,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Coin" json:"fees"`
}

func (m *MsgUndelegateWithFees) Reset()         { *m = MsgUndelegateWithFees{} }
func (m *MsgUndelegateWithFees) String() string { return proto.CompactTextString(m) }
func (*MsgUndelegateWithFees) ProtoMessage()    {}
func (*MsgUndelegateWithFees) Descriptor() ([]byte, []int) {
	return fileDescriptor_24d10861b4de12e1, []int{6}
}
func (m *MsgUndelegateWithFees) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUndelegateWithFees) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUndelegateWithFees.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUndelegateWithFees) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUndelegateWithFees.Merge(m, src)
}
func (m *MsgUndelegateWithFees) XXX_Size() int {
	return m.Size()
}
func (m *MsgUndelegateWithFees) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUndelegateWithFees.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUndelegateWithFees proto.InternalMessageInfo

func (m *MsgUndelegateWithFees) GetMessageUndelegate() *MsgUndelegate {
	if m != nil {
		return m.MessageUndelegate
	}
	return nil
}

type MsgUndelegateWithFeesResponse struct {
}

func (m *MsgUndelegateWithFeesResponse) Reset()         { *m = MsgUndelegateWithFeesResponse{} }
func (m *MsgUndelegateWithFeesResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUndelegateWithFeesResponse) ProtoMessage()    {}
func (*MsgUndelegateWithFeesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_24d10861b4de12e1, []int{7}
}
func (m *MsgUndelegateWithFeesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUndelegateWithFeesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUndelegateWithFeesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUndelegateWithFeesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUndelegateWithFeesResponse.Merge(m, src)
}
func (m *MsgUndelegateWithFeesResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUndelegateWithFeesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUndelegateWithFeesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUndelegateWithFeesResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgSendWithFees)(nil), "comsos.v1beta1.MsgSendWithFees")
	proto.RegisterType((*MsgSendWithFeesResponse)(nil), "comsos.v1beta1.MsgSendWithFeesResponse")
	proto.RegisterType((*MsgVoteWithFees)(nil), "comsos.v1beta1.MsgVoteWithFees")
	proto.RegisterType((*MsgVoteWithFeesResponse)(nil), "comsos.v1beta1.MsgVoteWithFeesResponse")
	proto.RegisterType((*MsgDelegateWithFees)(nil), "comsos.v1beta1.MsgDelegateWithFees")
	proto.RegisterType((*MsgDelegateWithFeesResponse)(nil), "comsos.v1beta1.MsgDelegateWithFeesResponse")
	proto.RegisterType((*MsgUndelegateWithFees)(nil), "comsos.v1beta1.MsgUndelegateWithFees")
	proto.RegisterType((*MsgUndelegateWithFeesResponse)(nil), "comsos.v1beta1.MsgUndelegateWithFeesResponse")
}

func init() {
	proto.RegisterFile("cosmos/v1beta1/msgs_with_fees.proto", fileDescriptor_24d10861b4de12e1)
}

var fileDescriptor_24d10861b4de12e1 = []byte{
	// 632 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x95, 0xcd, 0x4e, 0xd4, 0x50,
	0x14, 0xc7, 0xa7, 0x88, 0x06, 0x2f, 0x46, 0xb4, 0x40, 0x80, 0x22, 0x2d, 0x29, 0x51, 0x88, 0x64,
	0x7a, 0x03, 0x24, 0x2e, 0xdc, 0x39, 0x18, 0x76, 0x13, 0xcc, 0x8c, 0x1f, 0x09, 0x9b, 0x49, 0xa7,
	0x73, 0xb8, 0xd3, 0x30, 0x73, 0x6f, 0xd3, 0x73, 0x07, 0x65, 0xeb, 0x13, 0x68, 0x7c, 0x06, 0x57,
	0x3e, 0x82, 0x6b, 0x13, 0x76, 0x92, 0xb8, 0x31, 0x2e, 0x26, 0x06, 0x7c, 0x02, 0x9e, 0xc0, 0xb4,
	0xb4, 0x9d, 0x8f, 0xdc, 0xf9, 0x58, 0xcc, 0x6a, 0xa6, 0x39, 0xff, 0x73, 0xce, 0xff, 0xd7, 0x9c,
	0x7f, 0x4a, 0x36, 0x3c, 0x81, 0x4d, 0x81, 0xf4, 0x74, 0xa7, 0x0a, 0xd2, 0xdd, 0xa1, 0x4d, 0x64,
	0x58, 0x79, 0xef, 0xcb, 0x7a, 0xe5, 0x18, 0x00, 0x9d, 0x20, 0x14, 0x52, 0xe8, 0xf7, 0x3d, 0xd1,
	0x44, 0x81, 0x4e, 0x22, 0x32, 0x16, 0x98, 0x60, 0x22, 0x2e, 0xd1, 0xe8, 0xdf, 0x8d, 0xca, 0x78,
	0xc4, 0x84, 0x60, 0x0d, 0xa0, 0x6e, 0xe0, 0x53, 0x97, 0x73, 0x21, 0x5d, 0xe9, 0x0b, 0x9e, 0xcc,
	0x30, 0x56, 0x92, 0x6a, 0xfc, 0x54, 0x6d, 0x1d, 0x53, 0x97, 0x9f, 0xa5, 0x25, 0x85, 0x87, 0x9b,
	0x92, 0xfd, 0x4d, 0x23, 0x73, 0x45, 0x64, 0x65, 0xe0, 0xb5, 0x77, 0xbe, 0xac, 0x1f, 0x00, 0xa0,
	0x5e, 0x26, 0xf7, 0x9a, 0x80, 0xe8, 0x32, 0xa8, 0x20, 0xf0, 0xda, 0xb2, 0xb6, 0xae, 0x6d, 0xcd,
	0xee, 0x2e, 0x39, 0xbd, 0x26, 0x9d, 0xa4, 0xad, 0xb0, 0x74, 0xdd, 0xb6, 0xe6, 0xcf, 0xdc, 0x66,
	0xe3, 0xb9, 0xdd, 0xdd, 0x66, 0x97, 0x66, 0x93, 0xc7, 0x48, 0xa5, 0xef, 0x93, 0xe9, 0x08, 0x78,
	0x79, 0x6a, 0x5d, 0xdb, 0xba, 0x5b, 0xa0, 0xe7, 0x6d, 0x2b, 0xf7, 0xa7, 0x6d, 0x6d, 0x32, 0x5f,
	0xd6, 0x5b, 0xd5, 0x68, 0x34, 0x4d, 0x4c, 0xde, 0xfc, 0xe4, 0xb1, 0x76, 0x42, 0xe5, 0x59, 0x00,
	0xe8, 0xec, 0x0b, 0x9f, 0x97, 0xe2, 0x66, 0x7b, 0x85, 0x2c, 0xf5, 0x99, 0x2d, 0x01, 0x06, 0x82,
	0x23, 0xa4, 0x20, 0x6f, 0x85, 0x04, 0x15, 0xc8, 0xa9, 0x90, 0x30, 0x04, 0x24, 0x6a, 0x1b, 0x0d,
	0x12, 0xa9, 0x26, 0x09, 0xd2, 0x6d, 0x36, 0x03, 0xf9, 0xae, 0x91, 0xf9, 0x22, 0xb2, 0x97, 0xd0,
	0x00, 0xe6, 0x76, 0xc1, 0x54, 0xc8, 0x83, 0xd4, 0x55, 0x2d, 0xa9, 0x25, 0x40, 0xab, 0x0a, 0xa0,
	0xb4, 0xbd, 0x07, 0x0a, 0x59, 0xd6, 0x6a, 0x97, 0xe6, 0x92, 0x69, 0xa9, 0x72, 0x32, 0x60, 0x6b,
	0x64, 0x55, 0x61, 0x3e, 0x83, 0xfb, 0xa1, 0x91, 0xc5, 0x22, 0xb2, 0x37, 0xbc, 0xd6, 0x8f, 0xc7,
	0x88, 0x9e, 0xe2, 0xb5, 0x78, 0x1f, 0xe0, 0x9a, 0x02, 0xb0, 0x33, 0xa2, 0xb0, 0x72, 0xdd, 0xb6,
	0x16, 0x3b, 0x88, 0x9d, 0x76, 0xbb, 0xf4, 0x30, 0x99, 0xd9, 0x51, 0x4f, 0x06, 0xd3, 0x22, 0x6b,
	0x4a, 0x8c, 0x14, 0x74, 0xf7, 0xe7, 0x6d, 0x72, 0xab, 0x88, 0x4c, 0xff, 0xac, 0x91, 0xb9, 0x32,
	0xc8, 0xc3, 0xd0, 0xab, 0x03, 0xca, 0xd0, 0x95, 0x22, 0xd4, 0x6d, 0x65, 0x92, 0x7a, 0x34, 0xc6,
	0xd3, 0xd1, 0x9a, 0xec, 0xa5, 0x3a, 0x1f, 0x7f, 0xfd, 0xfb, 0x32, 0xb5, 0x65, 0x3f, 0xa1, 0x01,
	0x4a, 0xf7, 0x04, 0x68, 0x5f, 0xdc, 0xfb, 0xf7, 0x1f, 0x91, 0xe9, 0x38, 0x92, 0xd6, 0x80, 0x44,
	0xa7, 0x30, 0xc6, 0xe6, 0x08, 0x41, 0xe6, 0x60, 0x26, 0x76, 0x30, 0x65, 0xe7, 0xa2, 0xd9, 0x71,
	0x4a, 0xac, 0x01, 0x21, 0x1b, 0x3a, 0x5b, 0x99, 0x87, 0xce, 0xec, 0x63, 0x32, 0x93, 0x1d, 0xeb,
	0xc6, 0x90, 0x9b, 0xcf, 0x76, 0x6c, 0x8f, 0x21, 0x52, 0xec, 0x69, 0x10, 0xd2, 0x75, 0x2f, 0x8f,
	0x87, 0x1e, 0x5f, 0xb6, 0x2b, 0x3f, 0x96, 0x4c, 0xb1, 0xed, 0xab, 0x46, 0x16, 0x8a, 0x3e, 0x97,
	0xaf, 0xc5, 0x09, 0x70, 0x3c, 0x10, 0xe1, 0x0b, 0xcf, 0x13, 0x2d, 0x2e, 0x75, 0xd5, 0x1b, 0x52,
	0x09, 0x0d, 0x3a, 0xa6, 0x30, 0x5b, 0xbe, 0x17, 0x2f, 0xcf, 0xdb, 0xdb, 0x03, 0x0e, 0x46, 0xd5,
	0x5c, 0x78, 0x75, 0x7e, 0x69, 0x6a, 0x17, 0x97, 0xa6, 0xf6, 0xf7, 0xd2, 0xd4, 0x3e, 0x5d, 0x99,
	0xb9, 0x8b, 0x2b, 0x33, 0xf7, 0xfb, 0xca, 0xcc, 0x1d, 0x3d, 0xeb, 0xca, 0x4e, 0x00, 0x21, 0xfa,
	0x28, 0x81, 0x7b, 0x70, 0xc8, 0x81, 0x06, 0xe5, 0x68, 0x7e, 0x9e, 0xbb, 0xd2, 0x3f, 0x05, 0xfa,
	0x21, 0x5d, 0x14, 0xe7, 0xa9, 0x7a, 0x27, 0xfe, 0x04, 0xed, 0xfd, 0x0f, 0x00, 0x00, 0xff, 0xff,
	0x68, 0x96, 0xb5, 0xd0, 0x23, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	SetOrchestrator(ctx context.Context, in *MsgSetOrchestrator, opts ...grpc.CallOption) (*MsgSetOrchestratorResponse, error)
	Send(ctx context.Context, in *MsgSendWithFees, opts ...grpc.CallOption) (*MsgSendWithFeesResponse, error)
	Vote(ctx context.Context, in *MsgVoteWithFees, opts ...grpc.CallOption) (*MsgVoteWithFeesResponse, error)
	Delegate(ctx context.Context, in *MsgDelegateWithFees, opts ...grpc.CallOption) (*MsgDelegateWithFeesResponse, error)
	Undelegate(ctx context.Context, in *MsgUndelegateWithFees, opts ...grpc.CallOption) (*MsgUndelegateWithFeesResponse, error)
	MintTokensForAccount(ctx context.Context, in *MsgMintTokensForAccount, opts ...grpc.CallOption) (*MsgMintTokensForAccountResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) SetOrchestrator(ctx context.Context, in *MsgSetOrchestrator, opts ...grpc.CallOption) (*MsgSetOrchestratorResponse, error) {
	out := new(MsgSetOrchestratorResponse)
	err := c.cc.Invoke(ctx, "/comsos.v1beta1.Msg/SetOrchestrator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Send(ctx context.Context, in *MsgSendWithFees, opts ...grpc.CallOption) (*MsgSendWithFeesResponse, error) {
	out := new(MsgSendWithFeesResponse)
	err := c.cc.Invoke(ctx, "/comsos.v1beta1.Msg/Send", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Vote(ctx context.Context, in *MsgVoteWithFees, opts ...grpc.CallOption) (*MsgVoteWithFeesResponse, error) {
	out := new(MsgVoteWithFeesResponse)
	err := c.cc.Invoke(ctx, "/comsos.v1beta1.Msg/Vote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Delegate(ctx context.Context, in *MsgDelegateWithFees, opts ...grpc.CallOption) (*MsgDelegateWithFeesResponse, error) {
	out := new(MsgDelegateWithFeesResponse)
	err := c.cc.Invoke(ctx, "/comsos.v1beta1.Msg/Delegate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Undelegate(ctx context.Context, in *MsgUndelegateWithFees, opts ...grpc.CallOption) (*MsgUndelegateWithFeesResponse, error) {
	out := new(MsgUndelegateWithFeesResponse)
	err := c.cc.Invoke(ctx, "/comsos.v1beta1.Msg/Undelegate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) MintTokensForAccount(ctx context.Context, in *MsgMintTokensForAccount, opts ...grpc.CallOption) (*MsgMintTokensForAccountResponse, error) {
	out := new(MsgMintTokensForAccountResponse)
	err := c.cc.Invoke(ctx, "/comsos.v1beta1.Msg/MintTokensForAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	SetOrchestrator(context.Context, *MsgSetOrchestrator) (*MsgSetOrchestratorResponse, error)
	Send(context.Context, *MsgSendWithFees) (*MsgSendWithFeesResponse, error)
	Vote(context.Context, *MsgVoteWithFees) (*MsgVoteWithFeesResponse, error)
	Delegate(context.Context, *MsgDelegateWithFees) (*MsgDelegateWithFeesResponse, error)
	Undelegate(context.Context, *MsgUndelegateWithFees) (*MsgUndelegateWithFeesResponse, error)
	MintTokensForAccount(context.Context, *MsgMintTokensForAccount) (*MsgMintTokensForAccountResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) SetOrchestrator(ctx context.Context, req *MsgSetOrchestrator) (*MsgSetOrchestratorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetOrchestrator not implemented")
}
func (*UnimplementedMsgServer) Send(ctx context.Context, req *MsgSendWithFees) (*MsgSendWithFeesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Send not implemented")
}
func (*UnimplementedMsgServer) Vote(ctx context.Context, req *MsgVoteWithFees) (*MsgVoteWithFeesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Vote not implemented")
}
func (*UnimplementedMsgServer) Delegate(ctx context.Context, req *MsgDelegateWithFees) (*MsgDelegateWithFeesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delegate not implemented")
}
func (*UnimplementedMsgServer) Undelegate(ctx context.Context, req *MsgUndelegateWithFees) (*MsgUndelegateWithFeesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Undelegate not implemented")
}
func (*UnimplementedMsgServer) MintTokensForAccount(ctx context.Context, req *MsgMintTokensForAccount) (*MsgMintTokensForAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MintTokensForAccount not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_SetOrchestrator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetOrchestrator)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetOrchestrator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comsos.v1beta1.Msg/SetOrchestrator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetOrchestrator(ctx, req.(*MsgSetOrchestrator))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSendWithFees)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comsos.v1beta1.Msg/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Send(ctx, req.(*MsgSendWithFees))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Vote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgVoteWithFees)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Vote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comsos.v1beta1.Msg/Vote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Vote(ctx, req.(*MsgVoteWithFees))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Delegate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDelegateWithFees)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Delegate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comsos.v1beta1.Msg/Delegate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Delegate(ctx, req.(*MsgDelegateWithFees))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Undelegate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUndelegateWithFees)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Undelegate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comsos.v1beta1.Msg/Undelegate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Undelegate(ctx, req.(*MsgUndelegateWithFees))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_MintTokensForAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgMintTokensForAccount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).MintTokensForAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comsos.v1beta1.Msg/MintTokensForAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).MintTokensForAccount(ctx, req.(*MsgMintTokensForAccount))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "comsos.v1beta1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetOrchestrator",
			Handler:    _Msg_SetOrchestrator_Handler,
		},
		{
			MethodName: "Send",
			Handler:    _Msg_Send_Handler,
		},
		{
			MethodName: "Vote",
			Handler:    _Msg_Vote_Handler,
		},
		{
			MethodName: "Delegate",
			Handler:    _Msg_Delegate_Handler,
		},
		{
			MethodName: "Undelegate",
			Handler:    _Msg_Undelegate_Handler,
		},
		{
			MethodName: "MintTokensForAccount",
			Handler:    _Msg_MintTokensForAccount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cosmos/v1beta1/msgs_with_fees.proto",
}

func (m *MsgSendWithFees) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSendWithFees) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSendWithFees) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.Fees.Size()
		i -= size
		if _, err := m.Fees.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintMsgsWithFees(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if m.MessageSend != nil {
		{
			size, err := m.MessageSend.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgsWithFees(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSendWithFeesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSendWithFeesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSendWithFeesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgVoteWithFees) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgVoteWithFees) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgVoteWithFees) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.Fees.Size()
		i -= size
		if _, err := m.Fees.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintMsgsWithFees(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if m.MessageVote != nil {
		{
			size, err := m.MessageVote.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgsWithFees(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgVoteWithFeesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgVoteWithFeesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgVoteWithFeesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDelegateWithFees) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDelegateWithFees) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDelegateWithFees) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.Fees.Size()
		i -= size
		if _, err := m.Fees.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintMsgsWithFees(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if m.MessageDelegate != nil {
		{
			size, err := m.MessageDelegate.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgsWithFees(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDelegateWithFeesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDelegateWithFeesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDelegateWithFeesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUndelegateWithFees) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUndelegateWithFees) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUndelegateWithFees) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.Fees.Size()
		i -= size
		if _, err := m.Fees.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintMsgsWithFees(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if m.MessageUndelegate != nil {
		{
			size, err := m.MessageUndelegate.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgsWithFees(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUndelegateWithFeesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUndelegateWithFeesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUndelegateWithFeesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintMsgsWithFees(dAtA []byte, offset int, v uint64) int {
	offset -= sovMsgsWithFees(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgSendWithFees) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MessageSend != nil {
		l = m.MessageSend.Size()
		n += 1 + l + sovMsgsWithFees(uint64(l))
	}
	l = m.Fees.Size()
	n += 1 + l + sovMsgsWithFees(uint64(l))
	return n
}

func (m *MsgSendWithFeesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgVoteWithFees) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MessageVote != nil {
		l = m.MessageVote.Size()
		n += 1 + l + sovMsgsWithFees(uint64(l))
	}
	l = m.Fees.Size()
	n += 1 + l + sovMsgsWithFees(uint64(l))
	return n
}

func (m *MsgVoteWithFeesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDelegateWithFees) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MessageDelegate != nil {
		l = m.MessageDelegate.Size()
		n += 1 + l + sovMsgsWithFees(uint64(l))
	}
	l = m.Fees.Size()
	n += 1 + l + sovMsgsWithFees(uint64(l))
	return n
}

func (m *MsgDelegateWithFeesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUndelegateWithFees) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MessageUndelegate != nil {
		l = m.MessageUndelegate.Size()
		n += 1 + l + sovMsgsWithFees(uint64(l))
	}
	l = m.Fees.Size()
	n += 1 + l + sovMsgsWithFees(uint64(l))
	return n
}

func (m *MsgUndelegateWithFeesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovMsgsWithFees(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMsgsWithFees(x uint64) (n int) {
	return sovMsgsWithFees(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgSendWithFees) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgsWithFees
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSendWithFees: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSendWithFees: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageSend", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgsWithFees
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgsWithFees
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgsWithFees
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MessageSend == nil {
				m.MessageSend = &MsgSend{}
			}
			if err := m.MessageSend.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fees", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgsWithFees
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgsWithFees
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgsWithFees
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Fees.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgsWithFees(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgsWithFees
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSendWithFeesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgsWithFees
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSendWithFeesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSendWithFeesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsgsWithFees(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgsWithFees
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgVoteWithFees) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgsWithFees
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgVoteWithFees: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgVoteWithFees: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageVote", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgsWithFees
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgsWithFees
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgsWithFees
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MessageVote == nil {
				m.MessageVote = &MsgVote{}
			}
			if err := m.MessageVote.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fees", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgsWithFees
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgsWithFees
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgsWithFees
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Fees.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgsWithFees(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgsWithFees
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgVoteWithFeesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgsWithFees
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgVoteWithFeesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgVoteWithFeesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsgsWithFees(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgsWithFees
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDelegateWithFees) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgsWithFees
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDelegateWithFees: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDelegateWithFees: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageDelegate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgsWithFees
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgsWithFees
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgsWithFees
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MessageDelegate == nil {
				m.MessageDelegate = &MsgDelegate{}
			}
			if err := m.MessageDelegate.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fees", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgsWithFees
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgsWithFees
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgsWithFees
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Fees.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgsWithFees(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgsWithFees
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDelegateWithFeesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgsWithFees
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDelegateWithFeesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDelegateWithFeesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsgsWithFees(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgsWithFees
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUndelegateWithFees) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgsWithFees
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUndelegateWithFees: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUndelegateWithFees: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageUndelegate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgsWithFees
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgsWithFees
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgsWithFees
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MessageUndelegate == nil {
				m.MessageUndelegate = &MsgUndelegate{}
			}
			if err := m.MessageUndelegate.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fees", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgsWithFees
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgsWithFees
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgsWithFees
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Fees.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgsWithFees(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgsWithFees
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUndelegateWithFeesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgsWithFees
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUndelegateWithFeesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUndelegateWithFeesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsgsWithFees(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgsWithFees
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMsgsWithFees(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMsgsWithFees
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMsgsWithFees
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMsgsWithFees
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMsgsWithFees
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMsgsWithFees
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMsgsWithFees
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMsgsWithFees        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMsgsWithFees          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMsgsWithFees = fmt.Errorf("proto: unexpected end of group")
)
